name: Build and Publish NuGet Package

on:
  push:
    tags:
      - '*.*.*'  # Trigger the workflow on version tags (e.g., 1.0.0)

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        # Checks out the repository so that the workflow can access the code.

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          # Use an SDK version that supports both net8.0 and net9.0 targets.
          dotnet-version: '9.0.x'
        # Installs the appropriate .NET SDK.

      - name: Restore dependencies
        run: dotnet restore
        # Restores all project dependencies.

      - name: Build solution
        run: dotnet build --configuration Release --no-restore
        # Builds the solution in Release mode.

      - name: Pack NuGet package (multi-targeted)
        run: dotnet pack --configuration Release --no-build -o ./nupkg
        # Packs the project into a single NuGet package containing both net8.0 and net9.0 assemblies.
      
      - name: Publish NuGet package
        env:
          NUGET_API_KEY_RAYMIGRATOR_DAL: ${{ secrets.NUGET_API_KEY_RAYMIGRATOR_DAL }}
        run: dotnet nuget push ./nupkg/*.nupkg --api-key $NUGET_API_KEY_RAYMIGRATOR_DAL --source https://api.nuget.org/v3/index.json
        # Pushes the generated .nupkg file to nuget.org.
